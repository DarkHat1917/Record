%{
#include <stdio.h>

int yylex();

void yyerror(const char* s) {
    fprintf(stderr, "%s\n", s);
}

#define YYDEBUG 1  
%}

%token NUM

%left '+' '-'
%left '*' '/'

%%

statement: expr '\n'    { printf("Result: %d\n", $1); }
         ;

expr: expr '+' term    { $$ = $1 + $3; }
    | expr '-' term    { $$ = $1 - $3; }
    | term             { $$ = $1; }
    ;

term: term '*' factor  { $$ = $1 * $3; }
    | term '/' factor  { $$ = $1 / $3; }
    | factor           { $$ = $1; }
    ;

factor: NUM            { $$ = $1; }
      | '(' expr ')'   { $$ = $2; }
      ;

%%

int main() {
    yyparse();
    return 0;
}
